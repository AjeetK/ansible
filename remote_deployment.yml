
---
- hosts: launched
#  sudo: yes
#  host_key_checking: false
  remote_user: ubuntu
#  environment:
#    ANSIBLE_HOST_KEY_CHECKING:  False
  tasks:
  - name: update apt
    sudo: yes
    apt: update_cache=yes

  - name: Set up authorized_keys for the deploy user
    authorized_key: user=ubuntu
                    key="{{item}}"
    with_file:
      - /home/ubuntu/ssh_keys/tanmay.pub
      - /home/ubuntu/ssh_keys/ajeet.pub

 # - name: ensure public key and public one are present
 #   sudo: yes
 #   copy: src={{item}} dest=/home/ubuntu/.ssh/{{ item }} mode=0600
 #   with_items:
 #     - id_rsa.pub
#  - name: Deploy site files from Github repository
#    sudo: yes
#    git: repo=git@github.com:imlitech/imli-backend.git dest=/home/{{deploy_user}}/{{app_name}} key_file=/home/ubuntu/.ssh/id_rsa accept_hostkey=yes force=yes version=release
#  - name: config database.yml
#    template: src=database.yml.j2 dest={{ deploy_directory}}/config/database.yml

  - name: rsync the content app
    synchronize: src={{deploy_directory}} dest=/home/ubuntu/

  - name: make .ssh directory
    file: path=/home/ubuntu/.ssh state=directory

  - name: copy public and private key to api server
    copy: src=~/.ssh/id_rsa dest=/home/ubuntu/.ssh/ mode=0600

  - name: copy public and private key to api server
    copy: src=~/.ssh/id_rsa.pub dest=/home/ubuntu/.ssh/

#  - name: test connection to git
#    command: ssh -vvv git@github.com:imlitech/imli-backend.git key_file=/home/ubuntu/.ssh/id_rsa accept_hostkey=yes
#  - name: adding git ssh key to known host
#    git: repo=git@github.com:imlitech/imli-backend.git  key_file=/home/ubuntu/.ssh/id_rsa accept_hostkey=yes force=yes version=release
#  - name: ensure github is a known host
#    command: ssh-keyscan -H github.com >> /home/ubuntu/.ssh/known_hosts

  - name: ensure github.com is a known host
    sudo: yes
    lineinfile:
      dest: /home/ubuntu/.ssh/known_hosts
      create: yes
      state: present
      line: "{{ lookup('pipe', 'ssh-keyscan -t rsa github.com') }}"
      regexp: "^github\\.com"
  
  - name: bundle install
    command: bundle install chdir={{deploy_directory}}

  - name: sidekiq initializer
    command: bundle exec sidekiq -C ./config/sidekiq.yml -e production -d chdir={{deploy_directory}}

#  - name: migrate create
#    command: rake db:create RAILS_ENV="production" chdir={{ deploy_directory }}

#  - name: database migrate
#    command: rake db:migrate RAILS_ENV="production" chdir={{ deploy_directory }}

#  - name: tmp clear
#    command: bundle exec rake tmp:clear chdir={{ deploy_directory }}

#  - name: restart app
#    command: touch tmp/restart.txt chdir={{ deploy_directoryÂ¯ }}
#  command: echo "{{deploy_directory}}"
  - name: Restart nginx
    action: service name=nginx state=restarted
